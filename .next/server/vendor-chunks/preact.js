/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/preact";
exports.ids = ["vendor-chunks/preact"];
exports.modules = {

/***/ "(rsc)/./node_modules/preact/dist/preact.js":
/*!********************************************!*\
  !*** ./node_modules/preact/dist/preact.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var n, l, u, t, i, o, r, f = {}, e = [], c = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\nfunction s(n, l) {\n    for(var u in l)n[u] = l[u];\n    return n;\n}\nfunction a(n) {\n    var l = n.parentNode;\n    l && l.removeChild(n);\n}\nfunction v(l, u, t) {\n    var i, o, r, f = {};\n    for(r in u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n    if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : t), \"function\" == typeof l && null != l.defaultProps) for(r in l.defaultProps)void 0 === f[r] && (f[r] = l.defaultProps[r]);\n    return h(l, f, i, o, null);\n}\nfunction h(n, t, i, o, r) {\n    var f = {\n        type: n,\n        props: t,\n        key: i,\n        ref: o,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        __h: null,\n        constructor: void 0,\n        __v: null == r ? ++u : r\n    };\n    return null == r && null != l.vnode && l.vnode(f), f;\n}\nfunction p(n) {\n    return n.children;\n}\nfunction y(n, l) {\n    this.props = n, this.context = l;\n}\nfunction d(n, l) {\n    if (null == l) return n.__ ? d(n.__, n.__.__k.indexOf(n) + 1) : null;\n    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n    return \"function\" == typeof n.type ? d(n) : null;\n}\nfunction _(n) {\n    var l, u;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {\n            n.__e = n.__c.base = u.__e;\n            break;\n        }\n        return _(n);\n    }\n}\nfunction k(n) {\n    (!n.__d && (n.__d = !0) && i.push(n) && !x.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || setTimeout)(x);\n}\nfunction x() {\n    for(var n; x.__r = i.length;)n = i.sort(function(n, l) {\n        return n.__v.__b - l.__v.__b;\n    }), i = [], n.some(function(n) {\n        var l, u, t, i, o, r;\n        n.__d && (o = (i = (l = n).__v).__e, (r = l.__P) && (u = [], (t = s({}, i)).__v = i.__v + 1, I(r, i, t, l.__n, void 0 !== r.ownerSVGElement, null != i.__h ? [\n            o\n        ] : null, u, null == o ? d(i) : o, i.__h), T(u, i), i.__e != o && _(i)));\n    });\n}\nfunction b(n, l, u, t, i, o, r, c, s, a) {\n    var v, y, _, k, x, b, m, A = t && t.__k || e, C = A.length;\n    for(u.__k = [], v = 0; v < l.length; v++)if (null != (k = u.__k[v] = null == (k = l[v]) || \"boolean\" == typeof k ? null : \"string\" == typeof k || \"number\" == typeof k || \"bigint\" == typeof k ? h(null, k, null, null, k) : Array.isArray(k) ? h(p, {\n        children: k\n    }, null, null, null) : k.__b > 0 ? h(k.type, k.props, k.key, k.ref ? k.ref : null, k.__v) : k)) {\n        if (k.__ = u, k.__b = u.__b + 1, null === (_ = A[v]) || _ && k.key == _.key && k.type === _.type) A[v] = void 0;\n        else for(y = 0; y < C; y++){\n            if ((_ = A[y]) && k.key == _.key && k.type === _.type) {\n                A[y] = void 0;\n                break;\n            }\n            _ = null;\n        }\n        I(n, k, _ = _ || f, i, o, r, c, s, a), x = k.__e, (y = k.ref) && _.ref != y && (m || (m = []), _.ref && m.push(_.ref, null, k), m.push(y, k.__c || x, k)), null != x ? (null == b && (b = x), \"function\" == typeof k.type && k.__k === _.__k ? k.__d = s = g(k, s, n) : s = w(n, k, _, A, x, s), \"function\" == typeof u.type && (u.__d = s)) : s && _.__e == s && s.parentNode != n && (s = d(_));\n    }\n    for(u.__e = b, v = C; v--;)null != A[v] && L(A[v], A[v]);\n    if (m) for(v = 0; v < m.length; v++)z(m[v], m[++v], m[++v]);\n}\nfunction g(n, l, u) {\n    for(var t, i = n.__k, o = 0; i && o < i.length; o++)(t = i[o]) && (t.__ = n, l = \"function\" == typeof t.type ? g(t, l, u) : w(u, t, t, i, t.__e, l));\n    return l;\n}\nfunction w(n, l, u, t, i, o) {\n    var r, f, e;\n    if (void 0 !== l.__d) r = l.__d, l.__d = void 0;\n    else if (null == u || i != o || null == i.parentNode) n: if (null == o || o.parentNode !== n) n.appendChild(i), r = null;\n    else {\n        for(f = o, e = 0; (f = f.nextSibling) && e < t.length; e += 1)if (f == i) break n;\n        n.insertBefore(i, o), r = o;\n    }\n    return void 0 !== r ? r : i.nextSibling;\n}\nfunction m(n, l, u, t, i) {\n    var o;\n    for(o in u)\"children\" === o || \"key\" === o || o in l || C(n, o, null, u[o], t);\n    for(o in l)i && \"function\" != typeof l[o] || \"children\" === o || \"key\" === o || \"value\" === o || \"checked\" === o || u[o] === l[o] || C(n, o, l[o], u[o], t);\n}\nfunction A(n, l, u) {\n    \"-\" === l[0] ? n.setProperty(l, u) : n[l] = null == u ? \"\" : \"number\" != typeof u || c.test(l) ? u : u + \"px\";\n}\nfunction C(n, l, u, t, i) {\n    var o;\n    n: if (\"style\" === l) if (\"string\" == typeof u) n.style.cssText = u;\n    else {\n        if (\"string\" == typeof t && (n.style.cssText = t = \"\"), t) for(l in t)u && l in u || A(n.style, l, \"\");\n        if (u) for(l in u)t && u[l] === t[l] || A(n.style, l, u[l]);\n    }\n    else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/Capture$/, \"\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? t || n.addEventListener(l, o ? H : $, o) : n.removeEventListener(l, o ? H : $, o);\n    else if (\"dangerouslySetInnerHTML\" !== l) {\n        if (i) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && l in n) try {\n            n[l] = null == u ? \"\" : u;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof u || (null == u || !1 === u && -1 == l.indexOf(\"-\") ? n.removeAttribute(l) : n.setAttribute(l, u));\n    }\n}\nfunction $(n) {\n    this.l[n.type + !1](l.event ? l.event(n) : n);\n}\nfunction H(n) {\n    this.l[n.type + !0](l.event ? l.event(n) : n);\n}\nfunction I(n, u, t, i, o, r, f, e, c) {\n    var a, v, h, d, _, k, x, g, w, m, A, C, $, H, I, T = u.type;\n    if (void 0 !== u.constructor) return null;\n    null != t.__h && (c = t.__h, e = u.__e = t.__e, u.__h = null, r = [\n        e\n    ]), (a = l.__b) && a(u);\n    try {\n        n: if (\"function\" == typeof T) {\n            if (g = u.props, w = (a = T.contextType) && i[a.__c], m = a ? w ? w.props.value : a.__ : i, t.__c ? x = (v = u.__c = t.__c).__ = v.__E : (\"prototype\" in T && T.prototype.render ? u.__c = v = new T(g, m) : (u.__c = v = new y(g, m), v.constructor = T, v.render = M), w && w.sub(v), v.props = g, v.state || (v.state = {}), v.context = m, v.__n = i, h = v.__d = !0, v.__h = [], v._sb = []), null == v.__s && (v.__s = v.state), null != T.getDerivedStateFromProps && (v.__s == v.state && (v.__s = s({}, v.__s)), s(v.__s, T.getDerivedStateFromProps(g, v.__s))), d = v.props, _ = v.state, h) null == T.getDerivedStateFromProps && null != v.componentWillMount && v.componentWillMount(), null != v.componentDidMount && v.__h.push(v.componentDidMount);\n            else {\n                if (null == T.getDerivedStateFromProps && g !== d && null != v.componentWillReceiveProps && v.componentWillReceiveProps(g, m), !v.__e && null != v.shouldComponentUpdate && !1 === v.shouldComponentUpdate(g, v.__s, m) || u.__v === t.__v) {\n                    for(v.props = g, v.state = v.__s, u.__v !== t.__v && (v.__d = !1), v.__v = u, u.__e = t.__e, u.__k = t.__k, u.__k.forEach(function(n) {\n                        n && (n.__ = u);\n                    }), A = 0; A < v._sb.length; A++)v.__h.push(v._sb[A]);\n                    v._sb = [], v.__h.length && f.push(v);\n                    break n;\n                }\n                null != v.componentWillUpdate && v.componentWillUpdate(g, v.__s, m), null != v.componentDidUpdate && v.__h.push(function() {\n                    v.componentDidUpdate(d, _, k);\n                });\n            }\n            if (v.context = m, v.props = g, v.__v = u, v.__P = n, C = l.__r, $ = 0, \"prototype\" in T && T.prototype.render) {\n                for(v.state = v.__s, v.__d = !1, C && C(u), a = v.render(v.props, v.state, v.context), H = 0; H < v._sb.length; H++)v.__h.push(v._sb[H]);\n                v._sb = [];\n            } else do {\n                v.__d = !1, C && C(u), a = v.render(v.props, v.state, v.context), v.state = v.__s;\n            }while (v.__d && ++$ < 25);\n            v.state = v.__s, null != v.getChildContext && (i = s(s({}, i), v.getChildContext())), h || null == v.getSnapshotBeforeUpdate || (k = v.getSnapshotBeforeUpdate(d, _)), I = null != a && a.type === p && null == a.key ? a.props.children : a, b(n, Array.isArray(I) ? I : [\n                I\n            ], u, t, i, o, r, f, e, c), v.base = u.__e, u.__h = null, v.__h.length && f.push(v), x && (v.__E = v.__ = null), v.__e = !1;\n        } else null == r && u.__v === t.__v ? (u.__k = t.__k, u.__e = t.__e) : u.__e = j(t.__e, u, t, i, o, r, f, c);\n        (a = l.diffed) && a(u);\n    } catch (n) {\n        u.__v = null, (c || null != r) && (u.__e = e, u.__h = !!c, r[r.indexOf(e)] = null), l.__e(n, u, t);\n    }\n}\nfunction T(n, u) {\n    l.__c && l.__c(u, n), n.some(function(u) {\n        try {\n            n = u.__h, u.__h = [], n.some(function(n) {\n                n.call(u);\n            });\n        } catch (n) {\n            l.__e(n, u.__v);\n        }\n    });\n}\nfunction j(l, u, t, i, o, r, e, c) {\n    var s, v, h, p = t.props, y = u.props, _ = u.type, k = 0;\n    if (\"svg\" === _ && (o = !0), null != r) {\n        for(; k < r.length; k++)if ((s = r[k]) && \"setAttribute\" in s == !!_ && (_ ? s.localName === _ : 3 === s.nodeType)) {\n            l = s, r[k] = null;\n            break;\n        }\n    }\n    if (null == l) {\n        if (null === _) return document.createTextNode(y);\n        l = o ? document.createElementNS(\"http://www.w3.org/2000/svg\", _) : document.createElement(_, y.is && y), r = null, c = !1;\n    }\n    if (null === _) p === y || c && l.data === y || (l.data = y);\n    else {\n        if (r = r && n.call(l.childNodes), v = (p = t.props || f).dangerouslySetInnerHTML, h = y.dangerouslySetInnerHTML, !c) {\n            if (null != r) for(p = {}, k = 0; k < l.attributes.length; k++)p[l.attributes[k].name] = l.attributes[k].value;\n            (h || v) && (h && (v && h.__html == v.__html || h.__html === l.innerHTML) || (l.innerHTML = h && h.__html || \"\"));\n        }\n        if (m(l, y, p, o, c), h) u.__k = [];\n        else if (k = u.props.children, b(l, Array.isArray(k) ? k : [\n            k\n        ], u, t, i, o && \"foreignObject\" !== _, r, e, r ? r[0] : t.__k && d(t, 0), c), null != r) for(k = r.length; k--;)null != r[k] && a(r[k]);\n        c || (\"value\" in y && void 0 !== (k = y.value) && (k !== l.value || \"progress\" === _ && !k || \"option\" === _ && k !== p.value) && C(l, \"value\", k, p.value, !1), \"checked\" in y && void 0 !== (k = y.checked) && k !== l.checked && C(l, \"checked\", k, p.checked, !1));\n    }\n    return l;\n}\nfunction z(n, u, t) {\n    try {\n        \"function\" == typeof n ? n(u) : n.current = u;\n    } catch (n) {\n        l.__e(n, t);\n    }\n}\nfunction L(n, u, t) {\n    var i, o;\n    if (l.unmount && l.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || z(i, null, u)), null != (i = n.__c)) {\n        if (i.componentWillUnmount) try {\n            i.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, u);\n        }\n        i.base = i.__P = null, n.__c = void 0;\n    }\n    if (i = n.__k) for(o = 0; o < i.length; o++)i[o] && L(i[o], u, t || \"function\" != typeof n.type);\n    t || null == n.__e || a(n.__e), n.__ = n.__e = n.__d = void 0;\n}\nfunction M(n, l, u) {\n    return this.constructor(n, u);\n}\nfunction N(u, t, i) {\n    var o, r, e;\n    l.__ && l.__(u, t), r = (o = \"function\" == typeof i) ? null : i && i.__k || t.__k, e = [], I(t, u = (!o && i || t).__k = v(p, null, [\n        u\n    ]), r || f, f, void 0 !== t.ownerSVGElement, !o && i ? [\n        i\n    ] : r ? null : t.firstChild ? n.call(t.childNodes) : null, e, !o && i ? i : r ? r.__e : t.firstChild, o), T(e, u);\n}\nn = e.slice, l = {\n    __e: function(n, l, u, t) {\n        for(var i, o, r; l = l.__;)if ((i = l.__c) && !i.__) try {\n            if ((o = i.constructor) && null != o.getDerivedStateFromError && (i.setState(o.getDerivedStateFromError(n)), r = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), r = i.__d), r) return i.__E = i;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, u = 0, t = function(n) {\n    return null != n && void 0 === n.constructor;\n}, y.prototype.setState = function(n, l) {\n    var u;\n    u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = s({}, this.state), \"function\" == typeof n && (n = n(s({}, u), this.props)), n && s(u, n), null != n && this.__v && (l && this._sb.push(l), k(this));\n}, y.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), k(this));\n}, y.prototype.render = p, i = [], x.__r = 0, r = 0, exports.Component = y, exports.Fragment = p, exports.cloneElement = function(l, u, t) {\n    var i, o, r, f = s({}, l.props);\n    for(r in u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n    return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : t), h(l.type, f, i || l.key, o || l.ref, null);\n}, exports.createContext = function(n, l) {\n    var u = {\n        __c: l = \"__cC\" + r++,\n        __: n,\n        Consumer: function(n, l) {\n            return n.children(l);\n        },\n        Provider: function(n) {\n            var u, t;\n            return this.getChildContext || (u = [], (t = {})[l] = this, this.getChildContext = function() {\n                return t;\n            }, this.shouldComponentUpdate = function(n) {\n                this.props.value !== n.value && u.some(k);\n            }, this.sub = function(n) {\n                u.push(n);\n                var l = n.componentWillUnmount;\n                n.componentWillUnmount = function() {\n                    u.splice(u.indexOf(n), 1), l && l.call(n);\n                };\n            }), n.children;\n        }\n    };\n    return u.Provider.__ = u.Consumer.contextType = u;\n}, exports.createElement = v, exports.createRef = function() {\n    return {\n        current: null\n    };\n}, exports.h = v, exports.hydrate = function n(l, u) {\n    N(l, u, n);\n}, exports.isValidElement = t, exports.options = l, exports.render = N, exports.toChildArray = function n(l, u) {\n    return u = u || [], null == l || \"boolean\" == typeof l || (Array.isArray(l) ? l.some(function(l) {\n        n(l, u);\n    }) : u.push(l)), u;\n}; //# sourceMappingURL=preact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/preact/dist/preact.js\n");

/***/ })

};
;